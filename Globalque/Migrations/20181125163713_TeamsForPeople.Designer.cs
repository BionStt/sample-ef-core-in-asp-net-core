// <auto-generated />
using System;
using Globalque;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Globalque.Migrations
{
    [DbContext(typeof(PeopleDbContext))]
    [Migration("20181125163713_TeamsForPeople")]
    partial class TeamsForPeople
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Globalque.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("TeamId");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Globalque.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Globalque.TeamUser", b =>
                {
                    b.Property<int>("TeamId");

                    b.Property<string>("UserName");

                    b.HasKey("TeamId", "UserName");

                    b.ToTable("TeamUsers");
                });

            modelBuilder.Entity("Globalque.Person", b =>
                {
                    b.HasOne("Globalque.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.OwnsOne("Globalque.Pet", "Pet", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Animal");

                            b1.Property<string>("Name");

                            b1.ToTable("People");

                            b1.HasOne("Globalque.Person")
                                .WithOne("Pet")
                                .HasForeignKey("Globalque.Pet", "Id")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Globalque.TeamUser", b =>
                {
                    b.HasOne("Globalque.Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
